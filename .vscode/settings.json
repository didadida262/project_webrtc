{
  // Configuration formatting related configurations are all written to cover the global vscode settings
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.tslint": "explicit",
    "source.fixAll.stylelint": "explicit"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "prettier.enable": true,
  "eslint.enable": true,
  "stylelint.enable": true,
  // Fill in the blank string here, which means not to set the value and use the default value to prevent users from writing the prettier configuration path globally, and the prettier of monorepo will not be able to read it
  "prettier.configPath": "",
  // Use workspace ts version
  "typescript.tsdk": "node_modules/typescript/lib",
  "cSpell.words": [],
  "blueprint.templatesPath": [".vscode/blueprint-templates"],
  "css.lint.unknownAtRules": "ignore",
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  }
}
